===
Atomic Fact
===
fact.
---

(source_file
  (clause
    (atom
      (unquoted_atom))))

===
Atomic Directive
===
:-atom.
---

(source_file
  (directive
    (atom
      (unquoted_atom))))

===
Atom with Underscore
===
my_fact.
---

(source_file
  (clause
    (atom
      (unquoted_atom))))

===
Directive with space
===
:- thing.
---

(source_file
  (directive
    (atom
      (unquoted_atom))))

===
Quoted atom
===
'asdf'.
---

(source_file
  (clause
    (atom
      (quoted_atom
        (single_quoted_content)))))

===
Quoted format string
===
'asdf~nasdf'.
---

(source_file
  (clause
    (atom
      (quoted_atom
        (single_quoted_content)
        (format_string_placeholder)
        (single_quoted_content)))))

===
Quoted atom with character escape
===
'asdf\nasdf'.
---

(source_file
  (clause
    (atom
      (quoted_atom
        (single_quoted_content)
        (single_quoted_character_escape)
        (single_quoted_content)))))

===
Quoted atom with character escape and format string placeholder
===
:- 'qwerty\npoiu~~lkjhg'.
---

(source_file
  (directive
    (atom
      (quoted_atom
        (single_quoted_content)
        (single_quoted_character_escape)
        (single_quoted_content)
        (format_string_placeholder)
        (single_quoted_content)))))

===
Double quoted string
===
"asdf".
---

(source_file
  (clause
    (string
      (double_quoted_string
        (double_quoted_content)))))

===
Double quoted string with character escape
===
"as\ndf".
---

(source_file
  (clause
    (string
      (double_quoted_string
        (double_quoted_content)
        (double_quoted_character_escape)
        (double_quoted_content)))))

===
Double quoted string with escaped double quote
===
"as\"df".
---

(source_file
  (clause
    (string
      (double_quoted_string
        (double_quoted_content)
        (double_quoted_character_escape)
        (double_quoted_content)))))

===
Simple compound term
===
compound(term).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (atom
        (unquoted_atom)))))

===
Quoted functor compound term
===
'this is a functor'(blah).
---

(source_file
  (clause
    (compound_term
      (atom
        (quoted_atom
          (single_quoted_content)))
      (atom
        (unquoted_atom)))))

===
Variable - single letter
===
anything(X).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (variable))))

===
Variable - underscore
===
anything(_).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (variable))))

===
Variable - multi-letter
===
anything(Asdf).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (variable))))

===
Variable - all kinds of characters
===
anything(QWerty43_51X).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (variable))))

===
Multiple arguments in compound term
===
append(A, B, C).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (variable)
      (variable)
      (variable))))

===
List - empty
===
[].
---

(source_file
  (clause
    (list_literal)))

===
List - one item
===
[a].
---

(source_file
  (clause
    (list_literal
      (atom
        (unquoted_atom)))))

===
List - two items
===
[a, b].
---

(source_file
  (clause
    (list_literal
      (atom
        (unquoted_atom))
      (atom
        (unquoted_atom)))))

===
List - simple cons
===
[a | b].
---

(source_file
  (clause
    (list_literal
      (atom
        (unquoted_atom))
      (atom
        (unquoted_atom)))))

===
List - multi-item and cons
===
[a, b, c | tail].
---

(source_file
  (clause
    (list_literal
      (atom
        (unquoted_atom))
      (atom
        (unquoted_atom))
      (atom
        (unquoted_atom))
      (atom
        (unquoted_atom)))))

===
Number - decimal (no sign)
===
1234.
---

(source_file
  (clause
    (number)))

===
Number - decimal zero
===
0.
---

(source_file
  (clause
    (number)))

===
Number - signed zero
===
pair(-0, +0).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (number)
      (number))))

===
Number - decimal (signed)
===
pair(-345, +632).
---

(source_file
  (clause
    (compound_term
      (atom
        (unquoted_atom))
      (number)
      (number))))

===
Number - binary
===
0b00101011.
---

(source_file
  (clause
    (number)))

===
Number - octal
===
0o3427.
---

(source_file
  (clause
    (number)))

===
Number - hexadecimal
===
0x2a1f3e5.
---

(source_file
  (clause
    (number)))
